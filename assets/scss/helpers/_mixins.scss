// MIXINS

// CSS3 MANIPULATION

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin bw() {
	filter: grayscale(100%);
}

@mixin transform($args) {
	transform: #{$args};
}

@mixin css3-prefix($property, $value) {
	#{$property}: #{$value};
}

@mixin gradient-horizontal($fromColor:#0090cd, $toColor:#dd5cf1) {
	background: linear-gradient(to right, $fromColor 0%,$toColor 100%); // W3C
}

@mixin gradient-vertical($fromColor:#0090cd, $toColor:#dd5cf1) {
	background: linear-gradient(to bottom, $fromColor 0%,$toColor 100%); // W3C
}

@mixin backgroundCover {
	background-size: cover;
	background-repeat: no-repeat;
}

// ABSOLUTE POSITIONING

@mixin absolute ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}

//GRID

@mixin clearfix {
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

// VERTICAL ALIGN

@mixin vertical-align {
	position: absolute;
	top: 50%;
	@include transform( translateY(-50%) );
}
@mixin horizontal-align {
	position: absolute;
	left: 50%;
	@include transform( translateX(-50%) );
}

// TRANSITIONS & ANIMATION

@mixin ease($property:all, $speed:0.3s, $timing: $easeOutQuint) {
	transition: $property $speed $timing;
}

@mixin transition($args) {
	transition: #{$args};
}

@mixin transition-delay($delay) {
	transition-delay: $delay;
}

@mixin keyframes($animation-name) {
	@keyframes $animation-name {
		@content;
	}
}

@mixin animation($str) {
	animation: #{$str};
}

@mixin animation-delay($delay) {
	animation-delay: $delay;
}

@mixin appearanceNone {
	@include css3-prefix(appearance, none)
}

// Breakpoint

@mixin screen-above($screen-size) {
  @media screen and (min-width: $screen-size) {
    @content;
  }
}

@mixin screen-below($screen-size) {
  @media screen and (max-width: ($screen-size - 1px)) {
    @content;
  }
}

@mixin screen-between($min-screen-size, $max-screen-size) {
  @media screen and (min-width: $min-screen-size) and (max-width: ($max-screen-size - 1px)) {
    @content;
  }
}

// Typography

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin line-height($heightValue: 12 ){
    line-height: $heightValue + px; //fallback for old browsers
    line-height: (0.125 * $heightValue) + rem;
}
